// model-header.mustache

// licenseInfo.mustache

/**
 * Libre Graph API
 * Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.
 *
 * The version of the OpenAPI document: v1.0.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDriveItemInvite.h
 *
 * 
 */

#ifndef OAIDriveItemInvite_H
#define OAIDriveItemInvite_H

#include <QJsonObject>

#include "OAIDriveRecipient.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDriveRecipient;


class OAIDriveItemInvitePrivate;

class OAIDriveItemInvite : public OAIObject {
public:
    OAIDriveItemInvite();
    OAIDriveItemInvite(const OAIDriveItemInvite &other);
    OAIDriveItemInvite(QString json);
    ~OAIDriveItemInvite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDriveRecipient> getRecipients() const;
    void setRecipients(const QList<OAIDriveRecipient> &recipients);
    bool is_recipients_Set() const;
    bool is_recipients_Valid() const;

    QList<QString> getRoles() const;
    void setRoles(const QList<QString> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    QList<QString> getLibreGraphPermissionsActions() const;
    void setLibreGraphPermissionsActions(const QList<QString> &libre_graph_permissions_actions);
    bool is_libre_graph_permissions_actions_Set() const;
    bool is_libre_graph_permissions_actions_Valid() const;

    QDateTime getExpirationDateTime() const;
    void setExpirationDateTime(const QDateTime &expiration_date_time);
    bool is_expiration_date_time_Set() const;
    bool is_expiration_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();
    Q_DECLARE_PRIVATE(OAIDriveItemInvite)
    QSharedPointer<OAIDriveItemInvitePrivate> d_ptr;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDriveItemInvite)

#endif // OAIDriveItemInvite_H
