// model-header.mustache

// licenseInfo.mustache

/**
 * Libre Graph API
 * Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.
 *
 * The version of the OpenAPI document: v1.0.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoCoordinates.h
 *
 * The GeoCoordinates resource provides geographic coordinates and elevation of a location based on metadata contained within the file. If a DriveItem has a non-null location facet, the item represents a file with a known location associated with it. 
 */

#ifndef OAIGeoCoordinates_H
#define OAIGeoCoordinates_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {


class OAIGeoCoordinatesPrivate;

class OAIGeoCoordinates : public OAIObject {
public:
    OAIGeoCoordinates();
    OAIGeoCoordinates(const OAIGeoCoordinates &other);
    OAIGeoCoordinates(QString json);
    ~OAIGeoCoordinates() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAltitude() const;
    void setAltitude(const double &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();
    Q_DECLARE_PRIVATE(OAIGeoCoordinates)
    QSharedPointer<OAIGeoCoordinatesPrivate> d_ptr;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoCoordinates)

#endif // OAIGeoCoordinates_H
