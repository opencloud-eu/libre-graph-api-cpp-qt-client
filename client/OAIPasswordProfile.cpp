/**
 * Libre Graph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPasswordProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPasswordProfile::OAIPasswordProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPasswordProfile::OAIPasswordProfile() {
    this->initializeModel();
}

OAIPasswordProfile::~OAIPasswordProfile() {}

void OAIPasswordProfile::initializeModel() {

    m_force_change_password_next_sign_in_isSet = false;
    m_force_change_password_next_sign_in_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;
}

void OAIPasswordProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPasswordProfile::fromJsonObject(QJsonObject json) {

    m_force_change_password_next_sign_in_isValid = ::OpenAPI::fromJsonValue(force_change_password_next_sign_in, json[QString("forceChangePasswordNextSignIn")]);
    m_force_change_password_next_sign_in_isSet = !json[QString("forceChangePasswordNextSignIn")].isNull() && m_force_change_password_next_sign_in_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;
}

QString OAIPasswordProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPasswordProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_force_change_password_next_sign_in_isSet) {
        obj.insert(QString("forceChangePasswordNextSignIn"), ::OpenAPI::toJsonValue(force_change_password_next_sign_in));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(password));
    }
    return obj;
}

bool OAIPasswordProfile::isForceChangePasswordNextSignIn() const {
    return force_change_password_next_sign_in;
}
void OAIPasswordProfile::setForceChangePasswordNextSignIn(const bool &force_change_password_next_sign_in) {
    this->force_change_password_next_sign_in = force_change_password_next_sign_in;
    this->m_force_change_password_next_sign_in_isSet = true;
}

bool OAIPasswordProfile::is_force_change_password_next_sign_in_Set() const{
    return m_force_change_password_next_sign_in_isSet;
}

bool OAIPasswordProfile::is_force_change_password_next_sign_in_Valid() const{
    return m_force_change_password_next_sign_in_isValid;
}

QString OAIPasswordProfile::getPassword() const {
    return password;
}
void OAIPasswordProfile::setPassword(const QString &password) {
    this->password = password;
    this->m_password_isSet = true;
}

bool OAIPasswordProfile::is_password_Set() const{
    return m_password_isSet;
}

bool OAIPasswordProfile::is_password_Valid() const{
    return m_password_isValid;
}

bool OAIPasswordProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_force_change_password_next_sign_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPasswordProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
