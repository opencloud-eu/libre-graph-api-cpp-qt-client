/**
 * Libre Graph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFolder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFolder::OAIFolder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFolder::OAIFolder() {
    this->initializeModel();
}

OAIFolder::~OAIFolder() {}

void OAIFolder::initializeModel() {

    m_child_count_isSet = false;
    m_child_count_isValid = false;

    m_view_isSet = false;
    m_view_isValid = false;
}

void OAIFolder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFolder::fromJsonObject(QJsonObject json) {

    m_child_count_isValid = ::OpenAPI::fromJsonValue(child_count, json[QString("childCount")]);
    m_child_count_isSet = !json[QString("childCount")].isNull() && m_child_count_isValid;

    m_view_isValid = ::OpenAPI::fromJsonValue(view, json[QString("view")]);
    m_view_isSet = !json[QString("view")].isNull() && m_view_isValid;
}

QString OAIFolder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFolder::asJsonObject() const {
    QJsonObject obj;
    if (m_child_count_isSet) {
        obj.insert(QString("childCount"), ::OpenAPI::toJsonValue(child_count));
    }
    if (view.isSet()) {
        obj.insert(QString("view"), ::OpenAPI::toJsonValue(view));
    }
    return obj;
}

qint32 OAIFolder::getChildCount() const {
    return child_count;
}
void OAIFolder::setChildCount(const qint32 &child_count) {
    this->child_count = child_count;
    this->m_child_count_isSet = true;
}

bool OAIFolder::is_child_count_Set() const{
    return m_child_count_isSet;
}

bool OAIFolder::is_child_count_Valid() const{
    return m_child_count_isValid;
}

OAIFolderView OAIFolder::getView() const {
    return view;
}
void OAIFolder::setView(const OAIFolderView &view) {
    this->view = view;
    this->m_view_isSet = true;
}

bool OAIFolder::is_view_Set() const{
    return m_view_isSet;
}

bool OAIFolder::is_view_Valid() const{
    return m_view_isValid;
}

bool OAIFolder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_child_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (view.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFolder::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
