// model-header.mustache

// licenseInfo.mustache

/**
 * Libre Graph API
 * Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.
 *
 * The version of the OpenAPI document: v1.0.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUnifiedRoleDefinition.h
 *
 * A role definition is a collection of permissions in libre graph listing the operations that can be performed and the resources against which they can performed. 
 */

#ifndef OAIUnifiedRoleDefinition_H
#define OAIUnifiedRoleDefinition_H

#include <QJsonObject>

#include "OAIUnifiedRolePermission.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUnifiedRolePermission;


class OAIUnifiedRoleDefinitionPrivate;

class OAIUnifiedRoleDefinition : public OAIObject {
public:
    OAIUnifiedRoleDefinition();
    OAIUnifiedRoleDefinition(const OAIUnifiedRoleDefinition &other);
    OAIUnifiedRoleDefinition(QString json);
    ~OAIUnifiedRoleDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIUnifiedRolePermission> getRolePermissions() const;
    void setRolePermissions(const QList<OAIUnifiedRolePermission> &role_permissions);
    bool is_role_permissions_Set() const;
    bool is_role_permissions_Valid() const;

    qint32 getLibreGraphWeight() const;
    void setLibreGraphWeight(const qint32 &libre_graph_weight);
    bool is_libre_graph_weight_Set() const;
    bool is_libre_graph_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();
    Q_DECLARE_PRIVATE(OAIUnifiedRoleDefinition)
    QSharedPointer<OAIUnifiedRoleDefinitionPrivate> d_ptr;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUnifiedRoleDefinition)

#endif // OAIUnifiedRoleDefinition_H
