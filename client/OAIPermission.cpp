/**
 * Libre Graph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermission.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermission::OAIPermission(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermission::OAIPermission() {
    this->initializeModel();
}

OAIPermission::~OAIPermission() {}

void OAIPermission::initializeModel() {

    m_granted_to_isSet = false;
    m_granted_to_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void OAIPermission::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPermission::fromJsonObject(QJsonObject json) {

    m_granted_to_isValid = ::OpenAPI::fromJsonValue(granted_to, json[QString("grantedTo")]);
    m_granted_to_isSet = !json[QString("grantedTo")].isNull() && m_granted_to_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString OAIPermission::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPermission::asJsonObject() const {
    QJsonObject obj;
    if (granted_to.size() > 0) {
        obj.insert(QString("grantedTo"), ::OpenAPI::toJsonValue(granted_to));
    }
    if (roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(roles));
    }
    return obj;
}

QList<OAIIdentitySet> OAIPermission::getGrantedTo() const {
    return granted_to;
}
void OAIPermission::setGrantedTo(const QList<OAIIdentitySet> &granted_to) {
    this->granted_to = granted_to;
    this->m_granted_to_isSet = true;
}

bool OAIPermission::is_granted_to_Set() const{
    return m_granted_to_isSet;
}

bool OAIPermission::is_granted_to_Valid() const{
    return m_granted_to_isValid;
}

QList<QString> OAIPermission::getRoles() const {
    return roles;
}
void OAIPermission::setRoles(const QList<QString> &roles) {
    this->roles = roles;
    this->m_roles_isSet = true;
}

bool OAIPermission::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIPermission::is_roles_Valid() const{
    return m_roles_isValid;
}

bool OAIPermission::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (granted_to.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPermission::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
